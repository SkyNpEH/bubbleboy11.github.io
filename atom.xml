<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>外心人D的博客</title>
  
  
  <link href="https://bubbleboy11.github.io/atom.xml" rel="self"/>
  
  <link href="https://bubbleboy11.github.io/"/>
  <updated>2021-07-06T03:36:02.952Z</updated>
  <id>https://bubbleboy11.github.io/</id>
  
  <author>
    <name>外心人D</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>go的http</title>
    <link href="https://bubbleboy11.github.io/2021/07/07/go-de-http/"/>
    <id>https://bubbleboy11.github.io/2021/07/07/go-de-http/</id>
    <published>2021-07-06T16:21:41.000Z</published>
    <updated>2021-07-06T03:36:02.952Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
       </summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的type</title>
    <link href="https://bubbleboy11.github.io/2021/07/07/go-de-type/"/>
    <id>https://bubbleboy11.github.io/2021/07/07/go-de-type/</id>
    <published>2021-07-06T16:21:41.000Z</published>
    <updated>2021-07-06T08:08:39.102Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ol&gt;
&lt;li&gt;给一个类型定义别名, 实际上为什么会有byte， 就是我为了强调我们现在处理的对象是字节类型&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的defer</title>
    <link href="https://bubbleboy11.github.io/2021/07/06/go-de-defer/"/>
    <id>https://bubbleboy11.github.io/2021/07/06/go-de-defer/</id>
    <published>2021-07-05T16:21:41.000Z</published>
    <updated>2021-07-06T01:07:23.777Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;defer本质上是注册了一个延迟函数，defer函数的执行顺序已经确定&lt;br&gt;defer 没有嵌套 defer的机制是要取代try except finally&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;大量的嵌套try</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go错误和异常panic和recove</title>
    <link href="https://bubbleboy11.github.io/2021/07/06/go-cuo-wu-he-yi-chang-panic-he-recove/"/>
    <id>https://bubbleboy11.github.io/2021/07/06/go-cuo-wu-he-yi-chang-panic-he-recove/</id>
    <published>2021-07-05T16:21:41.000Z</published>
    <updated>2021-07-06T07:37:38.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;错误和异常是两个不同的概念，非常容易混淆。很多程序员习惯将一切非正常情况都看做错误，而不区分错误和异常，即使程序中可能有异常抛出，也将异常及时捕获并转换成错误。从表面上看，一切皆错误的思路更简单，而异常的引入仅仅增加了额外的复杂度。&lt;br&gt;但事实并非如此。众所周知，Gola</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go函数</title>
    <link href="https://bubbleboy11.github.io/2021/07/05/go-han-shu/"/>
    <id>https://bubbleboy11.github.io/2021/07/05/go-han-shu/</id>
    <published>2021-07-04T16:21:41.000Z</published>
    <updated>2021-07-05T04:31:23.625Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>python函数</title>
    <link href="https://bubbleboy11.github.io/2021/07/05/python-han-shu/"/>
    <id>https://bubbleboy11.github.io/2021/07/05/python-han-shu/</id>
    <published>2021-07-04T16:21:41.000Z</published>
    <updated>2021-07-05T08:51:03.816Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一个简单的计算器&lt;/p&gt;
&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go指针</title>
    <link href="https://bubbleboy11.github.io/2021/07/04/go-zhi-zhen/"/>
    <id>https://bubbleboy11.github.io/2021/07/04/go-zhi-zhen/</id>
    <published>2021-07-03T16:21:41.000Z</published>
    <updated>2021-07-06T13:22:29.142Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;像python和java这种语言都是极力的屏蔽指针， c/c++ 都提供了指针 指针本身是很强大&lt;br&gt;c和c++中指针的功能很强大 指针的转换 指针的偏移 指针的运算&lt;br&gt;go语言没有屏蔽指针，但是go语言在指针上做了大量的限制，安全性高很多，相比较</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的nil</title>
    <link href="https://bubbleboy11.github.io/2021/07/04/go-de-nil/"/>
    <id>https://bubbleboy11.github.io/2021/07/04/go-de-nil/</id>
    <published>2021-07-03T16:21:41.000Z</published>
    <updated>2021-07-04T13:58:51.118Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的map</title>
    <link href="https://bubbleboy11.github.io/2021/07/04/go-de-map/"/>
    <id>https://bubbleboy11.github.io/2021/07/04/go-de-map/</id>
    <published>2021-07-03T16:21:41.000Z</published>
    <updated>2021-07-06T13:34:58.001Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;map创建&quot;&gt;&lt;a href=&quot;#map创建&quot; class=&quot;headerlink&quot; title=&quot;map创建&quot;&gt;&lt;/a&gt;map创建&lt;/h3&gt;&lt;p&gt;go中的map</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go切片原理</title>
    <link href="https://bubbleboy11.github.io/2021/07/03/go-qie-pian-yuan-li/"/>
    <id>https://bubbleboy11.github.io/2021/07/03/go-qie-pian-yuan-li/</id>
    <published>2021-07-02T16:21:41.000Z</published>
    <updated>2021-07-03T05:09:23.549Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;切片底层是使用数组实现的，既要使用数组 又要满足动态的功能 怎么实现？&lt;br&gt;假设有一个值</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go切片</title>
    <link href="https://bubbleboy11.github.io/2021/07/02/go-qie-pian/"/>
    <id>https://bubbleboy11.github.io/2021/07/02/go-qie-pian/</id>
    <published>2021-07-01T16:21:41.000Z</published>
    <updated>2021-07-06T13:28:16.372Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;切片&quot;&gt;&lt;a href=&quot;#切片&quot; class=&quot;headerlink&quot; title=&quot;切片&quot;&gt;&lt;/a&gt;切片&lt;/h3&gt;&lt;p&gt;Go</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go数组</title>
    <link href="https://bubbleboy11.github.io/2021/07/02/go-shu-zu/"/>
    <id>https://bubbleboy11.github.io/2021/07/02/go-shu-zu/</id>
    <published>2021-07-01T16:21:41.000Z</published>
    <updated>2021-07-02T02:20:07.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;机器学习的同学对python的numpy array应该很了解，但是做web开发的同学对python的array使用的不多&lt;br&gt;Go</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的for循环</title>
    <link href="https://bubbleboy11.github.io/2021/07/01/go-de-for-xun-huan/"/>
    <id>https://bubbleboy11.github.io/2021/07/01/go-de-for-xun-huan/</id>
    <published>2021-06-30T16:21:41.000Z</published>
    <updated>2021-06-30T12:05:29.264Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Go 语言的 For 循环有 3</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的goto跳转转移语句</title>
    <link href="https://bubbleboy11.github.io/2021/07/01/go-de-goto/"/>
    <id>https://bubbleboy11.github.io/2021/07/01/go-de-goto/</id>
    <published>2021-06-30T16:21:41.000Z</published>
    <updated>2021-06-30T14:46:55.460Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Go 语言的 goto 语句通过标签进行代码间的无条件地转移到过程中指定的行&lt;/p&gt;
&lt;p&gt;goto 语句通常与条件语句配合使用。可用来实现条件转移， 构成循环，跳出循环体、避免重复退出等功能&lt;/p&gt;
&lt;p&gt;但是，在结构化程序设计中一般不主张使用 goto 语句，</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的if条件控制语句</title>
    <link href="https://bubbleboy11.github.io/2021/07/01/go-de-if-tiao-jian-kong-zhi-yu-ju/"/>
    <id>https://bubbleboy11.github.io/2021/07/01/go-de-if-tiao-jian-kong-zhi-yu-ju/</id>
    <published>2021-06-30T16:21:41.000Z</published>
    <updated>2021-06-30T04:05:26.387Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;go语言的常用控制流程有if和for，没有while， 而switch和goto是为了简化代码，降低重复代码，属于扩展的流程控制。&lt;/p&gt;
&lt;p&gt;if语句的结构：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go的switch语句</title>
    <link href="https://bubbleboy11.github.io/2021/07/01/go-de-switch-yu-ju/"/>
    <id>https://bubbleboy11.github.io/2021/07/01/go-de-switch-yu-ju/</id>
    <published>2021-06-30T16:21:41.000Z</published>
    <updated>2021-07-01T03:04:37.507Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;switch 语句用于基于不同条件执行不同动作，每一个 case 分支都是唯一的，从上至下逐一测试，直到匹配为止。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go跳出循环</title>
    <link href="https://bubbleboy11.github.io/2021/07/01/go-tiao-chu-xun-huan/"/>
    <id>https://bubbleboy11.github.io/2021/07/01/go-tiao-chu-xun-huan/</id>
    <published>2021-06-30T16:21:41.000Z</published>
    <updated>2021-07-01T03:06:21.948Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;循环控制语句可以控制循环体内语句的执行过程&lt;/p&gt;
&lt;p&gt;GO 语言支持 goto、break、continue 三种循环控制语句，三个语句都可以配合标签( label )使用，标签名区分大小写，定义后不使用会造成编译错误。&lt;/p&gt;
&lt;h3</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>python中为什么没有switch</title>
    <link href="https://bubbleboy11.github.io/2021/07/01/python-zhong-wei-shi-me-mei-you-switch/"/>
    <id>https://bubbleboy11.github.io/2021/07/01/python-zhong-wei-shi-me-mei-you-switch/</id>
    <published>2021-06-30T16:21:41.000Z</published>
    <updated>2021-07-01T03:00:30.928Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;查看Python官方:PEP 3103-A Switch/Case Statement&lt;/p&gt;
&lt;p&gt;发现其实实现Switch</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go字符串</title>
    <link href="https://bubbleboy11.github.io/2021/06/30/go-zi-fu-chuan/"/>
    <id>https://bubbleboy11.github.io/2021/06/30/go-zi-fu-chuan/</id>
    <published>2021-06-29T16:21:41.000Z</published>
    <updated>2021-06-30T11:43:49.616Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;字符串是字符的数组&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;求解字符串的长度&lt;br&gt;go的len函数获取中文字符串长度&lt;br&gt;返回的是字节的长度&lt;br&gt;涉及到中文问题就产生了变化&lt;br&gt;unicode 字符集， 存储的时候需要编码 utf8编码规则，</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
  </entry>
  
  <entry>
    <title>go基本数据类型</title>
    <link href="https://bubbleboy11.github.io/2021/06/29/go-ji-ben-shu-ju-lei-xing/"/>
    <id>https://bubbleboy11.github.io/2021/06/29/go-ji-ben-shu-ju-lei-xing/</id>
    <published>2021-06-28T17:46:44.000Z</published>
    <updated>2021-06-29T01:44:57.300Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;静态语言中中文处理很容易出错&lt;/p&gt;
&lt;h3 id=&quot;bool类型&quot;&gt;&lt;a href=&quot;#bool类型&quot; class=&quot;headerlink&quot; title=&quot;bool类型&quot;&gt;&lt;/a&gt;bool类型&lt;/h3&gt;&lt;p&gt;布尔型的值只可以是常量 true 或者</summary>
        
      
    
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/categories/go/"/>
    
    
    <category term="go" scheme="https://bubbleboy11.github.io/tags/go/"/>
    
  </entry>
  
</feed>
